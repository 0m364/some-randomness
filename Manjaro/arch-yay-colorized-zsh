# Function to handle command not found errors
command_not_found_handler() {
    # Define colors
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    NC='\033[0m' # No Color

    # Check if the command is available in the official package database
    if pacman -Ss "^$1$" > /dev/null 2>&1; then
        echo -e "${YELLOW}Command '$1' not found. Would you like to install the package from official repositories? [Y/n]${NC}"
        read -r response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            sudo pacman -S $1
            if [[ $? -eq 0 ]]; then
                echo -e "${GREEN}Package '$1' installed successfully.${NC}"
            else
                echo -e "${RED}Failed to install package '$1'.${NC}"
            fi
        else
            echo -e "${YELLOW}Package installation skipped.${NC}"
        fi
    else
        # Check if the command is available in the AUR using yay
        if yay -Ss "^$1$" > /dev/null 2>&1; then
            echo -e "${YELLOW}Command '$1' not found in official repositories. Would you like to install the package from AUR? [Y/n]${NC}"
            read -r response
            if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
                yay -S $1
                if [[ $? -eq 0 ]]; then
                    echo -e "${GREEN}Package '$1' installed successfully from AUR.${NC}"
                else
                    echo -e "${RED}Failed to install package '$1' from AUR.${NC}"
                fi
            else
                echo -e "${YELLOW}AUR package installation skipped.${NC}"
            fi
        else
            echo -e "${RED}Command '$1' not found and no matching package found in official repositories or AUR.${NC}"
        fi
    fi
}

# Make sure this function is called when a command is not found
zsh_command_not_found() {
    command_not_found_handler "$1"
}
